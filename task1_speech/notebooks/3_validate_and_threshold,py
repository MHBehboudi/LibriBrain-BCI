# 3 â€” Validation, Threshold Search, and Metrics Export
## This notebook loads checkpoints, computes validation probabilities, and searches thresholds maximizing macro-F1.

import numpy as np, torch
from sklearn.metrics import f1_score
from torch.utils.data import DataLoader
import lightning as L

# Assumes you have a ValidationPredictionDataset similar to your script.
class ValidationPredictionDataset(torch.utils.data.Dataset):
    def __init__(self, base_val_filtered_dataset):
        self.base = base_val_filtered_dataset
        self.use_seq2seq = USE_SEQ2SEQ_PREDICTION
        self.red_steps = EEG2REP_REDUCED_TIME_STEPS
    def __len__(self): return len(self.base)
    def __getitem__(self, i):
        x, g, y = self.base[i]
        if self.use_seq2seq:
            yds = F.adaptive_avg_pool1d(y.unsqueeze(0).unsqueeze(0).float(), self.red_steps).squeeze(0).squeeze(0)
            label = yds[self.red_steps//2].item()
        else:
            label = y.mean().item()
        return x, g, torch.tensor(label, dtype=torch.long)

